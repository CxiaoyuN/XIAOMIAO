name: Smart Sync, Build & Deploy Kitty JSON

on:
  schedule:
    - cron: "0 2 * * *"   # 每天凌晨 2 点自动同步
  workflow_dispatch:       # 手动触发
  push:
    branches:
      - main

jobs:
  sync-build-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout your repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Sync from d1y/kitty (exclude workflows, kitty.config.ts, docs)
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git remote add upstream https://github.com/d1y/kitty.git
          git fetch upstream

          # 检出上游 main 分支的文件
          for file in $(git ls-tree -r --name-only upstream/main); do
            # 跳过 workflows、kitty.config.ts、docs 文件夹
            if [[ "$file" == .github/workflows/* ]] || [[ "$file" == "kitty.config.ts" ]] || [[ "$file" == docs/* ]]; then
              echo "跳过 $file"
              continue
            fi

            # 如果本地有修改，先备份
            if [[ -f "$file" ]] && ! git diff --quiet HEAD -- "$file"; then
              ts=$(date +%Y%m%d%H%M%S)
              mv "$file" "${file}_local_${ts}"
              echo "检测到本地修改，已备份为 ${file}_local_${ts}"
            fi

            # 从上游检出文件
            git checkout upstream/main -- "$file"
          done

          git add .
          git commit -m "smart sync from upstream (exclude workflows, kitty.config.ts, docs, backup local changes)" || true
          git push origin HEAD:main --force

      - name: Install Bun
        run: |
          curl -fsSL https://bun.sh/install | bash
          echo "$HOME/.bun/bin" >> $GITHUB_PATH

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          if [ -f package.json ]; then
            npm install
          fi

      - name: Build JSON files
        run: |
          mkdir -p docs
          KITTY_TARGET=x bunx kitty-parse -o docs/x.json
          KITTY_TARGET=vod bunx kitty-parse -o docs/vod.json
          KITTY_TARGET=xvod bunx kitty-parse -o docs/xvod.json
          jq -s 'add' docs/x.json docs/vod.json docs/xvod.json > docs/all.json

      - name: Deploy to gh-pages branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./docs
